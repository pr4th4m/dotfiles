# set status bar on top
# set-option -g status-position top

# status line/bar background and foregorund colors
# set-option -g status-bg '#[fg=#7aa2f7]'
# colour235
# set-option -g status-fg colour235
set -g status-style "fg=#7aa2f7,bg=#25283a"
set -g status-left '#[fg=#7aa2f7]#S |#[default]'
set -g status-right-length 66
# set -g status-right '#[fg=colour2]#(echo $USER)@macOS | %a, %d %b %I:%M%p'
set -g status-right '#[fg=#7aa2f7] %a, %d %b %I:%M%p'
# set -g status-right '#[fg=#7aa2f7]#{battery_percentage} #{battery_remain} | %a, %d %b %I:%M%p'
# set -g status-right '#{battery_status_bg} Batt: #{battery_icon} #{battery_percentage} #{battery_remain} | %a %h-%d %H:%M '

set -g status-justify centre
set -g window-status-current-style 'fg=colour2'
set -g window-status-style 'fg=colour12,bold'

# for ture color and 256 color mode support
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# increase scrollback lines
set -g history-limit 10000

# set default shell to zsh
set-option -g default-shell /usr/local/bin/zsh

# fix for osx and tmux issue for vim copy/paste
# set-option -g default-command "reattach-to-user-namespace -l zsh"

# set escape time
# set -sg escape-time 10
set -sg escape-time 0

# Custom key bindings
bind-key - choose-window  # display all windows

# Move selection
# set -g mouse on

# $Id: screen-keys.conf,v 1.7 2010-07-31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.

# Set the prefix to ^Space
unbind C-b
set -g prefix C-Space
bind Space send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x
# unbind ^X
# bind ^X lock-server
# unbind x
# bind x lock-server
#
# # screen ^C c
# unbind ^C
# bind ^C new-window
# unbind c
# bind c new-window
#
# # detach ^D d
# unbind ^D
# bind ^D detach
#
# # displays *
# unbind *
# bind * list-clients
#
# # next ^@ ^N sp n
# unbind ^@
# bind ^@ next-window
# unbind ^N
# bind ^N next-window
# unbind " "
# bind " " next-window
# unbind n
# bind n next-window
#
# # title A
# unbind A
# bind A command-prompt "rename-window %%"

# other ^A
# unbind ^B
# bind ^B last-window
unbind ^Space
bind ^Space last-window

# # prev ^H ^P p ^?
# unbind ^H
# bind ^H previous-window
# unbind ^P
# bind ^P previous-window
# unbind p
# bind p previous-window
# unbind BSpace
# bind BSpace previous-window
#
# # windows ^W w
# unbind ^W
# bind ^W list-windows
# unbind w
# bind w list-windows
#
# # quit \
# unbind '\'
# bind '\' confirm-before "kill-server"

# kill K k
# unbind K
# bind K confirm-before "kill-window"
# unbind k
# bind k confirm-before "kill-window"

# # redisplay ^L l
# unbind ^L
# bind ^L refresh-client
# unbind l
# bind l refresh-client

# split -v v
# unbind v
# bind v split-window -hp50
# unbind h
# bind h split-window -vp40

# Split windows using | and -
unbind '"'
unbind %
unbind s
bind v split-window -hp50
bind s split-window -vp40

# Move around Tmux splits with vim like syntax
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# :kB: focus up
# unbind Tab
# bind Tab select-pane -t:.+
# unbind BTab
# bind BTab select-pane -t:.-

# bind j select-pane -t :.-
# bind -n C-n select-pane -t :.-
# bind -n C-k select-pane -U

# # " windowlist -b
# unbind '"'
# bind '"' choose-window

# Toggle sessions
# bind -n C-p switch-client -l

# Choose sessions and panes
bind - choose-tree -Zw

# Toggle status bar
# set -g status off
unbind e
bind e set-option -g status

# Send command to pane
unbind i
bind i run-shell -b "tmux send-keys -t 1 'clear && #{CMAP}' ENTER"

# ##### VIM Key Bindings ########
# for vim bindings
setw -g mode-keys vi # vim-style movement
# in normal tmux mode
# bind Space copy-mode # `tmux prefix + Space` starts copy mode.
unbind o
bind o copy-mode # `tmux prefix + Space` starts copy mode.

# fast tmux window switching accross session
# bind -n ^f run-shell "tmux list-windows -a -F \"##S:##I-##W\" | fzf-tmux | cut -d \"-\" -f 1 | xargs tmux switch-client -t"

# in copy modeâ€¦
bind -T copy-mode-vi v send-keys -X begin-selection # `v` begins a selection. (movement keys to select the desired bits)
bind -T copy-mode-vi V send-keys -X rectangle-toggle # `V` changes between line- and columnwise selection
bind -T copy-mode-vi Y send-keys -X copy-end-of-line # ^1

# copy text with vi selection or mouse selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind + delete-buffer

# bind key to paste from tmux paste buffer or system clipboard
bind ^p run-shell -b "tmux set-buffer \"$(pbpaste)\"; tmux paste-buffer"

# Plugin to restore tmux sessions
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-battery'

run '~/.tmux/plugins/tpm/tpm'
